// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . 2 . . . 2 
2 . 2 . 2 2 2 2 2 2 . 2 . 2 . 2 
2 . 2 . 2 . . . . 2 . 2 . 2 . 2 
2 . 2 . 2 2 2 2 . 2 . 2 . 2 2 2 
2 . 2 . . . . 2 . 2 . 2 . . . 2 
2 . 2 2 2 2 . 2 . 2 . 2 . 2 . 2 
2 . . . . 2 . 2 . . . 2 . 2 . 2 
2 2 2 2 . 2 2 2 2 2 . 2 . 2 . 2 
2 . . . . . . . 2 2 . . . 2 . 2 
2 . 2 2 2 2 2 . 2 2 2 2 2 2 . 2 
2 . 2 . . . 2 . 2 . 2 . . . . 2 
2 . 2 . 2 2 2 . 2 . 2 . 2 2 . 2 
2 . 2 . 2 . 2 . 2 . 2 . 2 . . 2 
. . . . 2 . . . . . 2 . 2 . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 
`, [myTiles.transparency16,sprites.dungeon.stairLarge,sprites.dungeon.stairLadder,sprites.dungeon.floorDark2,sprites.dungeon.darkGroundCenter], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . 2 . . . 2 
2 . 2 . 2 2 2 2 2 2 . 2 . 2 . 2 
2 . 2 . 2 . . . . 2 . 2 . 2 . 2 
2 . 2 . 2 2 2 2 . 2 . 2 . 2 2 2 
2 . 2 . . . . 2 . 2 . 2 . . . 2 
2 . 2 2 2 2 . 2 . 2 . 2 . 2 . 2 
2 . . . . 2 . 2 . . . 2 . 2 . 2 
2 2 2 2 . 2 2 2 2 2 . 2 . 2 . 2 
2 . . . . . . . 2 2 . . . 2 . 2 
2 . 2 2 2 2 2 . 2 2 2 2 2 2 . 2 
2 . 2 . . . 2 . 2 . 2 . . . . 2 
2 . 2 . 2 2 2 . 2 . 2 . 2 2 . 2 
2 . 2 . 2 . 2 . 2 . 2 . 2 . . 2 
. . . . 2 . . . . . 2 . 2 . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 
`, [myTiles.transparency16,sprites.dungeon.stairLarge,sprites.dungeon.stairLadder,sprites.dungeon.floorDark2,sprites.dungeon.darkGroundCenter], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . 2 . . . . . 2 . . 2 . . 
2 2 2 . 2 . 2 2 2 . 2 . . 2 . 2 
2 . . . . . 2 . 2 . 2 2 2 2 . 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 . 2 
2 . 2 . 2 . . . 2 . 2 2 . . . 2 
2 . 2 . 2 . 2 2 2 . 2 2 . 2 . 2 
2 . . . 2 . . . . . 2 2 . 2 . 2 
2 2 2 2 2 . 2 2 2 2 2 2 . 2 2 2 
2 . . . . . . . 2 . . 2 . . . 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 . 2 
2 . 2 . . . 2 . 2 . 2 . . 2 . 2 
2 . 2 . 2 2 2 . 2 . 2 . 2 2 . 2 
2 . 2 . 2 . 2 . 2 . 2 . 2 2 . 2 
2 . . . 2 . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorDark2,sprites.dungeon.stairLarge,sprites.dungeon.greenInnerNorthWest,sprites.dungeon.greenInnerNorthEast,sprites.dungeon.greenInnerSouthWest,sprites.dungeon.greenInnerSouthEast,sprites.dungeon.stairLadder], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010605050505050505050b0101010401010401010101010101010c0505050a0101040106050505050b010401010104010104010401010101040104010401040101040104010101010401040104010401010401040106050509010705090104010104010401040101010101010101040101040104010705050b01060505050901010401040101010104010401010101010107050805050b01040107050b010401010101010101040104010101040104010106050505050a010401040104010401010401010101040104010401040104010104010505050901070509010705080301020101010101010101010101010101`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . 2 2 2 . 2 
2 . 2 2 2 2 2 2 2 2 . . . . . 2 
2 . 2 . . . . . . 2 . 2 2 2 . 2 
2 . 2 . 2 2 2 2 . 2 . 2 . 2 . 2 
2 . 2 . 2 2 2 2 . 2 . 2 . 2 . 2 
2 . 2 . 2 . . . . 2 . . . 2 . 2 
2 . 2 . 2 . 2 2 2 2 2 2 2 2 . 2 
2 . 2 . 2 . . . . 2 . . . . . 2 
2 . 2 . 2 2 2 2 . 2 . 2 2 2 2 2 
2 . . . . . . 2 . 2 . . . 2 . 2 
2 2 2 2 2 2 . 2 . 2 2 2 . 2 . 2 
2 . . . . . . 2 . 2 . 2 . 2 . 2 
2 . 2 2 2 2 . 2 . 2 . 2 . 2 . 2 
2 . 2 . . . . 2 . . . 2 . . . . 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.stairNorth,sprites.dungeon.stairLadder,sprites.vehicle.roadVertical,sprites.vehicle.roadHorizontal,sprites.vehicle.roadTurn1,sprites.vehicle.roadTurn3,sprites.vehicle.roadIntersection1,sprites.vehicle.roadTurn4,sprites.vehicle.roadIntersection4,sprites.vehicle.roadTurn2,sprites.vehicle.roadIntersection2], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`1000100004040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040303030303030303030303030303030301010101010101010101010101010102030303030303030303030303030303030404040404040404040404040404040404040404040404040404040404040404`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.stairWest,sprites.dungeon.floorDark2,myTiles.tile1,myTiles.tile2], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile":
            case "tile1":return tile1;
            case "tile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
