// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`1000100003030303030303030303030303030303030404040404040404040403040404030304030403030303030304030403040303040304030404040403040304030403030403040303030304030403040303030304030404040403040304030404040303040303030304030403040304030403030404040403040304040403040304030303030304030303030304030403040303040404040404040303040404030403030403030303030403030303030304030304030404040304030403040404040303040304030303040304030403030403030403040304030403040304030404030104040403040404040403040304030303030303030303030303030303020303`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . 2 . . . 2 
2 . 2 . 2 2 2 2 2 2 . 2 . 2 . 2 
2 . 2 . 2 . . . . 2 . 2 . 2 . 2 
2 . 2 . 2 2 2 2 . 2 . 2 . 2 2 2 
2 . 2 . . . . 2 . 2 . 2 . . . 2 
2 . 2 2 2 2 . 2 . 2 . 2 . 2 . 2 
2 . . . . 2 . 2 . . . 2 . 2 . 2 
2 2 2 2 . 2 2 2 2 2 . 2 . 2 . 2 
2 . . . . . . . 2 2 . . . 2 . 2 
2 . 2 2 2 2 2 . 2 2 2 2 2 2 . 2 
2 . 2 . . . 2 . 2 . 2 . . . . 2 
2 . 2 . 2 2 2 . 2 . 2 . 2 2 . 2 
2 . 2 . 2 . 2 . 2 . 2 . 2 . . 2 
. . . . 2 . . . . . 2 . 2 . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 
`, [myTiles.transparency16,sprites.dungeon.stairLarge,sprites.dungeon.stairLadder,sprites.dungeon.floorDark2,sprites.dungeon.darkGroundCenter], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . 2 . . . 2 
2 . 2 . 2 2 2 2 2 2 . 2 . 2 . 2 
2 . 2 . 2 . . . . 2 . 2 . 2 . 2 
2 . 2 . 2 2 2 2 . 2 . 2 . 2 2 2 
2 . 2 . . . . 2 . 2 . 2 . . . 2 
2 . 2 2 2 2 . 2 . 2 . 2 . 2 . 2 
2 . . . . 2 . 2 . . . 2 . 2 . 2 
2 2 2 2 . 2 2 2 2 2 . 2 . 2 . 2 
2 . . . . . . . 2 2 . . . 2 . 2 
2 . 2 2 2 2 2 . 2 2 2 2 2 2 . 2 
2 . 2 . . . 2 . 2 . 2 . . . . 2 
2 . 2 . 2 2 2 . 2 . 2 . 2 2 . 2 
2 . 2 . 2 . 2 . 2 . 2 . 2 . . 2 
. . . . 2 . . . . . 2 . 2 . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 
`, [myTiles.transparency16,sprites.dungeon.stairLarge,sprites.dungeon.stairLadder,sprites.dungeon.floorDark2,sprites.dungeon.darkGroundCenter], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . 2 . . . . . 2 . . 2 . . 
2 2 2 . 2 . 2 2 2 . 2 . . 2 . 2 
2 . . . . . 2 . 2 . 2 2 2 2 . 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 . 2 
2 . 2 . 2 . . . 2 . 2 2 . . . 2 
2 . 2 . 2 . 2 2 2 . 2 2 . 2 . 2 
2 . . . 2 . . . . . 2 2 . 2 . 2 
2 2 2 2 2 . 2 2 2 2 2 2 . 2 2 2 
2 . . . . . . . 2 . . 2 . . . 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 . 2 
2 . 2 . . . 2 . 2 . 2 . . 2 . 2 
2 . 2 . 2 2 2 . 2 . 2 . 2 2 . 2 
2 . 2 . 2 . 2 . 2 . 2 . 2 2 . 2 
2 . . . 2 . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorDark2,sprites.dungeon.stairLarge,sprites.dungeon.greenInnerNorthWest,sprites.dungeon.greenInnerNorthEast,sprites.dungeon.greenInnerSouthWest,sprites.dungeon.greenInnerSouthEast,sprites.dungeon.stairLadder], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`1000100004040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040303030303030303030303030303030301010101010101010101010101010102030303030303030303030303030303030404040404040404040404040404040404040404040404040404040404040404`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.stairWest,sprites.dungeon.floorDark2,myTiles.tile1,myTiles.tile2], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`10001000010101010101010101010101010102010101050404010504040404040c0408010105080101010301010101010301010101030101050408010504090101010301010a04040801010103010604040408010103010101010301030101010101010101030104090103010604040404040901010301010301030101010101010103010103010508010609010504040901030101030103010101030103010103010301010301030103010a04080105080103010103010301030103010101030101030101030103010301030103010301050801010301030101010301030103010301010106040704040408010604070407040b01010101010101010101010101010101`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 
2 2 . . . 2 . . . . . . . . . 2 
2 . . 2 2 2 . 2 2 2 2 2 . 2 2 2 
2 . 2 2 . . . 2 . . . 2 2 2 . 2 
2 . . . . 2 2 2 . 2 . . . . . 2 
2 . 2 2 2 2 . 2 . 2 2 2 2 2 2 2 
2 . 2 . . 2 . 2 . . . . . . . 2 
2 . 2 2 . 2 . 2 2 2 2 2 2 2 . 2 
2 . 2 . . 2 . . 2 . . . . 2 . 2 
2 . 2 . 2 2 2 . 2 . 2 2 . 2 . 2 
2 . 2 . 2 . 2 . . . 2 . . 2 . 2 
2 . 2 . 2 . 2 . 2 2 2 . 2 2 . 2 
2 . 2 . 2 . 2 . 2 . 2 . 2 . . 2 
2 . 2 . 2 2 2 . 2 . 2 . 2 . 2 2 
2 . . . . . . . 2 . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.stairLadder,sprites.vehicle.roadVertical,sprites.vehicle.roadHorizontal,sprites.vehicle.roadTurn1,sprites.vehicle.roadTurn3,sprites.vehicle.roadIntersection1,sprites.vehicle.roadTurn4,sprites.vehicle.roadTurn2,sprites.vehicle.roadIntersection2,sprites.dungeon.stairEast,sprites.vehicle.roadIntersection3], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex`100010000105010101010101010101010101010101060208010101010702020208010301010301030101070209010101030103010103010301010301010103010a020b010103010a0202090107020b0101010301010301010101010103010a020801030101030107020202020901010103010301010301030101010101010702090103010103010301070202020209010101030101030103010301010101010107020b01010301010103010702020201030103010103010702090103010101010301030101030103010101030107020103010301010301010107020b0103010103010101010a02020209010a020901020c02080101010101010101010101010101010401`, img`
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 2 2 2 . . . . . 2 . 2 
2 . 2 . 2 2 . . . 2 2 2 . 2 . 2 
2 . 2 . 2 2 . 2 2 2 . 2 . . . 2 
2 . 2 . . . . 2 . . . 2 2 2 . 2 
2 . 2 2 2 2 2 2 . 2 . . . 2 . 2 
2 . 2 . . . . . . 2 2 2 . 2 . 2 
2 . 2 . 2 2 2 2 2 2 . . . 2 . 2 
2 . 2 . 2 . . . . . . 2 2 2 . 2 
2 . 2 . 2 . 2 2 2 2 2 2 . . . 2 
2 . 2 2 2 . 2 . . . . 2 . 2 . 2 
2 . 2 . . . 2 . 2 2 2 2 . 2 . 2 
2 . 2 . 2 2 2 . 2 . . 2 . 2 . 2 
2 . 2 2 2 . . . 2 . 2 2 . 2 2 2 
2 . . . . . 2 . . . 2 . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.vehicle.roadHorizontal,sprites.vehicle.roadVertical,sprites.dungeon.stairLadder,sprites.dungeon.stairNorth,sprites.vehicle.roadIntersection2,sprites.vehicle.roadTurn1,sprites.vehicle.roadTurn2,sprites.vehicle.roadTurn4,sprites.vehicle.roadTurn3,sprites.vehicle.roadIntersection4,sprites.vehicle.roadIntersection1], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level12":
            case "level12":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . 2 . . . . . 2 
2 . 2 . 2 2 2 2 2 2 . 2 2 2 . 2 
2 . 2 . 2 . . . . . . 2 . 2 . 2 
2 . 2 2 2 . 2 . 2 2 2 2 . 2 . 2 
. . . . . . 2 . 2 . . . . 2 . 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 . 2 
2 . 2 . . . . . 2 . . . . . . 2 
2 . 2 2 2 2 2 2 2 . 2 2 2 2 2 2 
2 . . 2 . . . . . . 2 2 . . . 2 
2 2 . 2 . 2 2 2 2 2 2 . . 2 . . 
2 . . 2 . . . . . . 2 . 2 2 2 2 
2 . 2 2 2 2 2 2 2 . . . 2 2 . 2 
2 . 2 . . . . . 2 2 2 2 2 2 . 2 
2 . . . 2 2 2 . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.darkGroundCenter,sprites.dungeon.stairLarge,sprites.dungeon.stairLadder], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile":
            case "tile1":return tile1;
            case "tile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
